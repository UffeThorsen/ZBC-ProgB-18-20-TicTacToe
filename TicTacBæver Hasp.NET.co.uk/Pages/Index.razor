@page "/"

<div class="detvedjegikke">
    <div class="detvedjeggodt">
        <select @bind="BeaverUI.a">
            @foreach (string key in BeaverUI.AIs.keys.ToArray())
            {
                <option style="position: absolute;left:25%; top:-10%" value="@key">@key</option>
            }
        </select>
        <button class="btn btn-primary" style="position: absolute;left:35%; top:-10%" @onclick="(() => StartNewGame())"> New Game </button>
        <div class="row">
            <img src="@BeaverUI.SymbolToImage(BeaverUI.game[0, 0])" class="collo" @onclick="(() => ClickOnButton(0, 0))" />
            <img src="@BeaverUI.SymbolToImage(BeaverUI.game[1, 0])" class="collo" @onclick="(() => ClickOnButton(1, 0))" />
            <img src="@BeaverUI.SymbolToImage(BeaverUI.game[2, 0])" class="collo" @onclick="(() => ClickOnButton(2, 0))" />
        </div>
        <div class="row">
            <img src="@BeaverUI.SymbolToImage(BeaverUI.game[0, 1])" class="collo" @onclick="(() => ClickOnButton(0, 1))" />
            <img src="@BeaverUI.SymbolToImage(BeaverUI.game[1, 1])" class="collo" @onclick="(() => ClickOnButton(1, 1))" />
            <img src="@BeaverUI.SymbolToImage(BeaverUI.game[2, 1])" class="collo" @onclick="(() => ClickOnButton(2, 1))" />
        </div>
        <div class="row">
            <img src="@BeaverUI.SymbolToImage(BeaverUI.game[0, 2])" class="collo" @onclick="(() => ClickOnButton(0, 2))" />
            <img src="@BeaverUI.SymbolToImage(BeaverUI.game[1, 2])" class="collo" @onclick="(() => ClickOnButton(1, 2))" />
            <img src="@BeaverUI.SymbolToImage(BeaverUI.game[2, 2])" class="collo" @onclick="(() => ClickOnButton(2, 2))" />
        </div>
    </div>
</div>


@code
{
    void StartNewGame()
    {
        if(BeaverUI.pageUpdate == null)
        {
            BeaverUI.pageUpdate = new Action(UpdateScreen);
        }
        BeaverUI.StartNewGame();
    }
    void ClickOnButton(int i,int j)
    {
        BeaverUI.MakeMove(i,j);
        this.StateHasChanged();
    }

    void UpdateScreen()
    {
        InvokeAsync(this.StateHasChanged);
    }

    bool CompareBools(bool b1, bool b2)
    {
        
        return b1 != b2;
    }

    bool AreBoolsEqual(bool b1, bool b2)
    {
        return !CompareBools(b1,b2);
    }

    bool FalseEqualTo()
    {
        return false;
    }
}
